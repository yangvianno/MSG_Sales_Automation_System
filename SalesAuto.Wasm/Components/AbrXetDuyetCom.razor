@using Radzen.Blazor
@using SalesAuto.Wasm.Services
@using SalesAuto.Models.ViewModel
@using SalesAuto.Wasm.Components

@inject IABRClient aBRClient
@inject IToastService toastService
@inject DialogService dialogService
@inject ICommonUI commonUI
@inject IBenhVienClient benhVienClient
@inject IExportFile exportFile
@inject IJSRuntime jsRuntime

<ABRQuaTrinhTinhABR Nam=@Nam Thang=@Thang DaXetDuyet1=@DaXetDuyet1 DaXetDuyet2=@DaXetDuyet2 MaBenhVien=@MaBenhVien ></ABRQuaTrinhTinhABR>

<h3>Xét duyệt</h3>
<div class="container-fluid">    
        <div class="row">
            <div class="col">
                <table>
                    <tr>
                    @if (BenhVienVMs != null && BenhVienVMs.Count > 1)
                    {
                        <td>
                            <RadzenButton @bind-Value="Nam" Text="Nhập ngân sách" Size="ButtonSize.Medium" Visible=@(!DaXetDuyet1) Click="@(async ()=>await NhapNganSach())" Disabled=@(MaBenhVien=="") ></RadzenButton>
                        </td>
                    }
                    else
                    {
                        <td>
                            <RadzenButton @bind-Value="Nam" Text="Nhập ngân sách" Size="ButtonSize.Medium" Visible=@(!DaXetDuyet1) Click="@(async ()=>await NhapNganSach())"></RadzenButton>
                        </td>
                    }
                    @if (BenhVienVMs != null && BenhVienVMs.Count > 1)
                    {
                        <td>
                            <RadzenDropDown @bind-Value="MaBenhVien" Data="@BenhVienVMs" TextProperty="TenBenhVien" ValueProperty="MaBenhVien" Change=@(async ()=> await Reload()) Style="width:100%" />
                        </td>
                    }

                        <td>
                            <label>
                                Tháng
                            </label>
                        </td>
                        <td>
                            <RadzenNumeric @bind-Value="Thang" TValue="int" Min="1" Max="12" Change=@(async () =>  await Reload())></RadzenNumeric>
                        </td>
                        <td>
                            <label>
                                Năm
                            </label>
                        </td>
                        <td>
                            <RadzenNumeric @bind-Value="Nam" TValue="int" Change=@(async () =>  await Reload())></RadzenNumeric>
                        </td>
                        <td>                            
                            <AuthorizeView Roles="abrXetDuyet1">   
                                <span class="badge border h-100 w-100">
                                @if (DaXetDuyet1)
                                {
                                    if (DaXetDuyet2)
                                    {
                                        <button type="button" class="btn btn-primary btn-md" disabled> Đã xét duyệt mức 2 </button>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-secondary btn-md" disabled> Đợi xét duyệt mức 2 </button>
                                    }
                                }
                                else
                                {
                                    if (DaTinhABR)
                                    {
                                        <RadzenButton Icon="save" Size="ButtonSize.Medium" Text="Xét duyệt mức 1" ButtonStyle="ButtonStyle.Danger" Visible=@(!DaXetDuyet1 && DaTinhABR) Click="@(async () => await XetDuyet(1))"></RadzenButton>
                                        @if(SoLanTuChoi1>0)
                                        {
                                            <span>(lần @(SoLanTuChoi1+1))</span>
                                        }
                                    }
                                    else
                                    {
                                        <RadzenButton style="color:black" Disabled> Đợi tính ABR </RadzenButton>
                                    }
                                    
                                }  
                                </span>
                            </AuthorizeView>                            
                        </td>
                        <td>
                            
                            <AuthorizeView Roles="abrXetDuyet2">                                
                                <span class="badge border h-100 w-100">
                                @if (DaXetDuyet2)
                                {
                                    <button type="button" class="btn btn-primary btn-md" disabled> Đã xét duyệt mức 2</button>
                                }
                                else
                                {
                                    if (DaXetDuyet1)
                                    {
                                        <RadzenButton Icon="save" Size="ButtonSize.Medium" Text="Từ chối" ButtonStyle="ButtonStyle.Danger" Visible=@(!DaXetDuyet2 && DaXetDuyet1 && DaTinhABR) Click="@(async () => await DeletePheDuyet(1))"></RadzenButton>
                                        <RadzenButton Icon="save" Size="ButtonSize.Medium" Text="Xét duyệt mức 2" ButtonStyle="ButtonStyle.Danger" Visible=@(!DaXetDuyet2 && DaXetDuyet1 && DaTinhABR) Click="@(async () => await XetDuyet(2))"></RadzenButton>
                                    }
                                    else
                                    {
                                        <button type="button" class="btn btn-secondary btn-md" disabled>
                                            Đợi xét duyệt mức 1
                                        </button>
                                    }
                                    @if(SoLanTuChoi1>0)
                                    {
                                        <span>(từ chối lần @(SoLanTuChoi1))</span>
                                    }
                                }  
                                </span>
                            </AuthorizeView>
                            
                        </td>
                    </tr>
                </table>
            </div>
        </div>    
</div>

<RadzenTabs RenderMode="TabRenderMode.Client">
    <Tabs>
        <RadzenTabsItem Text="Bảng tổng kết">
        @if (listTongHop!=null)        {
            <RadzenButton Text="Excel" Icon="grid_on" Click="Export" Style="margin-bottom:20px" />

            <RadzenDataGrid @ref="danhMucGridTongHop" AllowFiltering="true" AllowPaging="true" PageSize="200" AllowSorting="true"
                EditMode="DataGridEditMode.Single"
                AllowColumnResize="true"
                FilterMode="FilterMode.Simple"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                Data="@listTongHop" TItem="ABRSoSanhTongHopVM"
                Render="@OnRenderTongHop">
                <GroupHeaderTemplate>
                    <strong> 
                        @context.GroupDescriptor.GetTitle(): @context.Data.Key, @(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().group1)
                    </strong>
                </GroupHeaderTemplate>
                <Columns>
                    <RadzenDataGridColumn Width="100px" TItem="ABRSoSanhTongHopVM" Property="Muc" Title="Mục">
                    </RadzenDataGridColumn>                    
                    <RadzenDataGridColumn TItem="ABRSoSanhTongHopVM" Property="NoiDung" Title="Nội dung">                
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Width="150px" TItem="ABRSoSanhTongHopVM" Property="ThucTeThangTruoc" Title="Thực tế tháng trước" TextAlign="TextAlign.Right">
                        <Template Context="row">
                                @if (row.Muc == "VI" || (row.Muc == "IX" && row.NoiDung == "Tổng cộng %ABR / Doanh thu tổng") || (row.Muc == "IX" && row.NoiDung == "Tổng cộng %ABR Sau ĐC/ Doanh thu tổng"))
                            {                                    
                                @((row.ThucTeThangTruoc*100).ToString("#,##0.##") + "%")
                            }
                            else
                            {
                                @row.ThucTeThangTruoc.ToString("#,###")
                            }
                        </Template>     
                        <GroupFooterTemplate>
                            @{
                                if (context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VI")
                                {
                                     <b>@((GroupThucTeThangTruoc*100).ToString("#,##0.##") + "%")</b>
                                }
                                else if( context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="I" 
                                    || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="II" 
                                    || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="III"
                                    || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="IV"
                                    || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="V")
                                {
                                    <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:#,#}", context.Data.Items.Cast<ABRSoSanhTongHopVM>().Sum(o => o.ThucTeThangTruoc))</b>
                                } else if(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VII"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VIII"
                                    )
                                {
                                    <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:0,0}", context.Data.Items.Cast<ABRSoSanhTongHopVM>().Average(o => o.ThucTeThangTruoc))</b>
                                }
                            }
                        </GroupFooterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Width="150px" TItem="ABRSoSanhTongHopVM" Property="NganSachThangNay" Title="Ngân sách tháng này" TextAlign="TextAlign.Right">                        
                        <Template Context="row">
                                @if (row.Muc == "VI" || (row.Muc == "IX" && row.NoiDung == "Tổng cộng %ABR / Doanh thu tổng") || (row.Muc == "IX" && row.NoiDung == "Tổng cộng %ABR Sau ĐC/ Doanh thu tổng"))
                            {                                    
                                @((row.NganSachThangNay*100).ToString("#,##0.##") + "%")
                            }
                            else
                            {
                                @row.NganSachThangNay.ToString("#,###")
                            }
                        </Template>   
                        <GroupFooterTemplate>
                            @if (context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VI")
                            {
                                    <b>@((GroupNganSachThangNay*100).ToString("#,##0.##") + "%")</b>
                            }
                            else if(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="I" 
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="II"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="III"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="IV"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="V")
                            {
                                <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:#,#}", context.Data.Items.Cast<ABRSoSanhTongHopVM>().Sum(o => o.NganSachThangNay))</b>
                            }
                            else if(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VII"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VIII"
                                )
                            {
                                <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:0,0}", context.Data.Items.Cast<ABRSoSanhTongHopVM>().Average(o => o.NganSachThangNay))</b>
                            }
                        </GroupFooterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Width="150px" TItem="ABRSoSanhTongHopVM" Property="ThucTeThangNay" Title="Thực tế tháng này" TextAlign="TextAlign.Right">
                        <Template Context="row">
                                @if (row.Muc == "VI" || (row.Muc == "IX" && row.NoiDung == "Tổng cộng %ABR / Doanh thu tổng") || (row.Muc == "IX" && row.NoiDung == "Tổng cộng %ABR Sau ĐC/ Doanh thu tổng"))
                            {                                    
                                @((row.ThucTeThangNay*100).ToString("#,##0.##") + "%")
                            }
                            else
                            {
                                @row.ThucTeThangNay.ToString("#,###")
                            }
                        </Template>  
                        <GroupFooterTemplate>
                            @if (context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VI")
                            {
                                    <b>@((GroupThucTeThangNay*100).ToString("#,##0.##") + "%")</b>
                            }
                            else 
                            if(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="I" 
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="II"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="III"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="IV"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="V")
                            {
                                    <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:0,0}", context.Data.Items.Cast<ABRSoSanhTongHopVM>().Sum(o => o.ThucTeThangNay))</b>
                            }
                            else if(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VII"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VIII"
                                )
                            {
                                <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:0,0}", context.Data.Items.Cast<ABRSoSanhTongHopVM>().Average(o => o.ThucTeThangNay))</b>
                            }
                        </GroupFooterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Width="90px" TItem="ABRSoSanhTongHopVM" Property="PhanTramChenhLechThang" Title="% thực tế" TextAlign="TextAlign.Center">
                        <HeaderTemplate>
                            <span style="white-space: normal" >
                                % thực tế
                            </span>
                        </HeaderTemplate>
                        <Template Context="row">
                                @if (row.Muc == "I" || row.Muc == "II" || row.Muc == "III" || row.Muc == "IV" || row.Muc == "V" || row.Muc == "IX")
                                {
                                    @((row.PhanTramChenhLechThang*100).ToString("#,##0.##")+ "%")
                                }
                        </Template>     
                        <GroupFooterTemplate>
                            @if (context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc == "II" || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc == "V")
                            {
                                var TongChenhLech = context.Data.Items.Cast<ABRSoSanhTongHopVM>().Sum(o => o.ChenhLechThang);
                                var TongThangTruoc = context.Data.Items.Cast<ABRSoSanhTongHopVM>().Sum(o => o.ThucTeThangTruoc);
                                if (TongThangTruoc==0)
                                {
                                    <b>0%</b>
                                }
                                else
                                {
                                    <b>@((TongChenhLech/TongThangTruoc*100).ToString("#,##0.##")+"%")</b>
                                }
                            }
                            else
                            {
                                <b></b>
                            }
                        </GroupFooterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Width="150px" TItem="ABRSoSanhTongHopVM" Property="ChenhLechThang" Title="So vói tháng trước" TextAlign="TextAlign.Right">
                        <Template Context="row">
                                @if (row.Muc == "VI" || (row.Muc == "IX" && row.NoiDung == "Tổng cộng %ABR / Doanh thu tổng") || (row.Muc == "IX" && row.NoiDung == "Tổng cộng %ABR Sau ĐC/ Doanh thu tổng"))
                            {                                    
                                @((row.ChenhLechThang*100).ToString("##,##0.##") + "%")
                            }
                            else
                            {
                                @row.ChenhLechThang.ToString("#,###")
                            }
                        </Template> 
                        <GroupFooterTemplate>
                            @if(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VI")
                            {
                                    <b>@((GroupChenhLechThang*100).ToString("#,##0.##") + "%")</b>
                            } 
                            else if(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="I" 
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="II"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="III"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="IV"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="V")
                            {
                                <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:#,#}", context.Data.Items.Cast<ABRSoSanhTongHopVM>().Sum(o => o.ChenhLechThang))</b>
                            }
                            else if(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VII"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VIII"
                                    )
                                {
                                    <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:0,0}", context.Data.Items.Cast<ABRSoSanhTongHopVM>().Average(o => o.ChenhLechThang))</b>
                                }
                        </GroupFooterTemplate>
                    </RadzenDataGridColumn>                    
                    
                    <RadzenDataGridColumn Width="90px" TItem="ABRSoSanhTongHopVM" Property="PhanTramChenhLechThucTeNganSach" Title="% thực tế - ngân sách" TextAlign="TextAlign.Center">
                        <HeaderTemplate>
                            <span style="white-space: normal" >
                                % thực tế - ngân sách
                            </span>
                        </HeaderTemplate>
                        <Template Context="row">
                            @if (row.Muc == "I" || row.Muc == "II")
                            {
                                @((row.PhanTramChenhLechThucTeNganSach*100).ToString("#,##0.##") + "%")
                            }
                        </Template>         
                        <GroupFooterTemplate>
                            @if (context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc == "I" || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc == "II")
                            {
                                var TongChenhLech = context.Data.Items.Cast<ABRSoSanhTongHopVM>().Sum(o => o.ChenhLechThucTeNganSach);
                                var TongThangTruoc = context.Data.Items.Cast<ABRSoSanhTongHopVM>().Sum(o => o.NganSachThangNay);
                                if (TongThangTruoc==0)
                                {
                                    <b>0%</b>
                                }
                                else
                                {
                                    <b>@((TongChenhLech/TongThangTruoc*100).ToString("#,##0.##")+"%")</b>
                                }
                            }
                            else
                            {
                                <b></b>
                            }
                        </GroupFooterTemplate>
                    </RadzenDataGridColumn>

                    <RadzenDataGridColumn Width="150px" TItem="ABRSoSanhTongHopVM" Property="ChenhLechThucTeNganSach" Title="So với ngân sách" TextAlign="TextAlign.Right">
                        <Template Context="row">
                                @if (row.Muc == "VI" || (row.Muc == "IX" && row.NoiDung == "Tổng cộng %ABR / Doanh thu tổng") || (row.Muc == "IX" && row.NoiDung == "Tổng cộng %ABR Sau ĐC/ Doanh thu tổng"))
                            {                                    
                                @((row.ChenhLechThucTeNganSach*100).ToString("#,##0.##") + "%")
                            }
                            else
                            {
                                @row.ChenhLechThucTeNganSach.ToString("#,###")
                            }
                        </Template>     
                        <GroupFooterTemplate>
                            @if(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="I" 
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="II"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="III"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="IV"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="V")
                            {
                                <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:#,#}", context.Data.Items.Cast<ABRSoSanhTongHopVM>().Sum(o => o.ChenhLechThucTeNganSach))</b>
                            }
                            else if(context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VII"
                                || context.Data.Items.Cast<ABRSoSanhTongHopVM>().FirstOrDefault().Muc=="VIII"
                                    )
                                {
                                    <b>@String.Format(new System.Globalization.CultureInfo("en-US"), "{0:0,0}", context.Data.Items.Cast<ABRSoSanhTongHopVM>().Average(o => o.ChenhLechThucTeNganSach))</b>
                                }
                        </GroupFooterTemplate>
                    </RadzenDataGridColumn>  
                </Columns>
            </RadzenDataGrid>        }

        </RadzenTabsItem>
        <RadzenTabsItem Text="Bảng chi tiết">
            <ABRBangChiTietCom Thang=@Thang Nam=@Nam MaBenhVien="@MaBenhVien" />
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>

@code {
    [CascadingParameter]
    public IModalService Modal { get; set; }
    private int Thang;
    private int Nam;
    int SoLanTuChoi1=0;
    bool DaXetDuyet1;
    bool DaXetDuyet2;
    bool DaTinhABR;
    private decimal GroupThucTeThangTruoc;
    private decimal GroupNganSachThangNay;
    private decimal GroupThucTeThangNay;
    private decimal GroupChenhLechThang;
    private decimal GroupChenhLechThucTeNganSach;
    private RadzenDataGrid<AbrSoSanhChiTietVM> danhMucGridChiTiet;
    private List<AbrSoSanhChiTietVM> listChiTiet;
    private RadzenDataGrid<ABRSoSanhTongHopVM> danhMucGridTongHop;
    private List<ABRSoSanhTongHopVM> listTongHop;
    private List<BenhVienVM> BenhVienVMs;
    private string MaBenhVien="";

    protected override async Task OnInitializedAsync()
    {
        var Ngay = DateTime.Now.AddMonths(-1);
        Thang = Ngay.Month;
        Nam = Ngay.Year;
        BenhVienVMs = await aBRClient.GetBenhVien();
        await benhVienClient.getBenhVienDangLamViec();
        await Reload();
    }

    private async Task LoadDanhSachTongHop()
    {
        commonUI.BusyDialog(dialogService, "Loading...");
        try
        {
            listTongHop = await aBRClient.GetABRSoSanhTongHop(Thang, Nam, MaBenhVien);
            var list = listTongHop.FindAll(x => x.Muc == "II");
            if (list != null)
            {
                foreach (var item in list)
                {
                    var NewItem = new ABRSoSanhTongHopVM() { Muc = "VI", NoiDung = item.NoiDung, group1 = "%ABR / Doanh thu" };
                    var found = listTongHop.Find(x => x.Muc == "V" && x.NoiDung == item.NoiDung);
                    if (found != null)
                    {
                        NewItem.ThucTeThangTruoc = (item.ThucTeThangTruoc == 0 ? 0 : found.ThucTeThangTruoc / item.ThucTeThangTruoc);
                        NewItem.ThucTeThangNay = (item.ThucTeThangNay == 0 ? 0 : found.ThucTeThangNay / item.ThucTeThangNay);
                        NewItem.NganSachThangNay = (item.NganSachThangNay == 0 ? 0 : found.NganSachThangNay / item.NganSachThangNay);
                        NewItem.ChenhLechThang = NewItem.ThucTeThangNay - NewItem.ThucTeThangTruoc;
                        NewItem.ChenhLechThucTeNganSach = NewItem.ThucTeThangNay - NewItem.NganSachThangNay;
                    }
                    listTongHop.Add(NewItem);
                }
            }
            //Tính Phần Trăm Mục III
            var listABR = listTongHop.FindAll(x => x.Muc == "V");
            GroupThucTeThangTruoc = list.Sum(x => x.ThucTeThangTruoc);
            GroupThucTeThangTruoc = (decimal)(GroupThucTeThangTruoc != 0 ? listABR.Sum(x => x.ThucTeThangTruoc) / GroupThucTeThangTruoc : 0);
            GroupNganSachThangNay = list.Sum(x => x.NganSachThangNay);
            GroupNganSachThangNay = (GroupNganSachThangNay != 0 ? listABR.Sum(x => x.NganSachThangNay) / GroupNganSachThangNay : 0);
            GroupThucTeThangNay = list.Sum(x => x.ThucTeThangNay);
            GroupThucTeThangNay = (GroupThucTeThangNay != 0 ? listABR.Sum(x => x.ThucTeThangNay) / GroupThucTeThangNay : 0);

            GroupChenhLechThang = GroupThucTeThangNay - GroupThucTeThangTruoc;
            GroupChenhLechThucTeNganSach = GroupThucTeThangNay - GroupThucTeThangNay;
            list = listTongHop.FindAll(x => x.Muc == "I");
            if (list != null)
            {
                foreach (var item in list)
                {
                    {
                        var NewItem = new ABRSoSanhTongHopVM() { Muc = "VII", NoiDung = item.NoiDung, group1 = "Perbill" };
                        var found = listTongHop.Find(x => x.Muc == "II" && x.NoiDung == item.NoiDung);
                        if (found != null)
                        {
                            NewItem.ThucTeThangTruoc = (item.ThucTeThangTruoc == 0 ? 0 : found.ThucTeThangTruoc / item.ThucTeThangTruoc);
                            NewItem.ThucTeThangNay = (item.ThucTeThangNay == 0 ? 0 : found.ThucTeThangNay / item.ThucTeThangNay);
                            NewItem.NganSachThangNay = (item.NganSachThangNay == 0 ? 0 : found.NganSachThangNay / item.NganSachThangNay);
                            NewItem.ChenhLechThang = NewItem.ThucTeThangNay - NewItem.ThucTeThangTruoc;
                            NewItem.ChenhLechThucTeNganSach = NewItem.ThucTeThangNay - NewItem.NganSachThangNay;
                        }
                        listTongHop.Add(NewItem);
                    }
                    {
                        var NewItem = new ABRSoSanhTongHopVM() { Muc = "VIII", NoiDung = item.NoiDung, group1 = "ABR/ca" };
                        var found = listTongHop.Find(x => x.Muc == "V" && x.NoiDung == item.NoiDung);
                        if (found != null)
                        {
                            NewItem.ThucTeThangTruoc = (item.ThucTeThangTruoc == 0 ? 0 : found.ThucTeThangTruoc / item.ThucTeThangTruoc);
                            NewItem.ThucTeThangNay = (item.ThucTeThangNay == 0 ? 0 : found.ThucTeThangNay / item.ThucTeThangNay);
                            NewItem.NganSachThangNay = (item.NganSachThangNay == 0 ? 0 : found.NganSachThangNay / item.NganSachThangNay);
                            NewItem.ChenhLechThang = NewItem.ThucTeThangNay - NewItem.ThucTeThangTruoc;
                            NewItem.ChenhLechThucTeNganSach = NewItem.ThucTeThangNay - NewItem.NganSachThangNay;
                        }
                        listTongHop.Add(NewItem);
                    }
                }
            }            
            // Lay Doanh Thu Thang
            var doanhThuThang = await aBRClient.GetABRDoanhThuThangTongHop(Thang, Nam, MaBenhVien);
            if (doanhThuThang != null)
            {
                listTongHop.Add(doanhThuThang.FirstOrDefault());
                var NewItem = new ABRSoSanhTongHopVM() { Muc = "IX", NoiDung = "Tổng cộng %ABR / Doanh thu tổng", group1 = "Doanh thu tổng" };
                var item = doanhThuThang.FirstOrDefault();
                if (item != null)
                {
                    NewItem.ThucTeThangNay = (item.ThucTeThangNay == 0 ? 0 : listABR.Sum(x => x.ThucTeThangNay) / item.ThucTeThangNay);
                    NewItem.ThucTeThangTruoc = (item.ThucTeThangTruoc == 0 ? 0 : listABR.Sum(x => x.ThucTeThangTruoc) / item.ThucTeThangTruoc);
                    NewItem.NganSachThangNay = (item.NganSachThangNay == 0 ? 0 : listABR.Sum(x => x.NganSachThangNay) / item.NganSachThangNay);
                    NewItem.PhanTramChenhLechThang = NewItem.ThucTeThangNay - NewItem.ThucTeThangTruoc;
                    NewItem.PhanTramChenhLechThucTeNganSach = 0;
                }
                listTongHop.Add(NewItem);
                var DieuChinhThang = await aBRClient.GetABRDieuChinhThangTongHop(Thang, Nam, MaBenhVien);
                if (DieuChinhThang != null)
                {
                    listTongHop.Add(DieuChinhThang.FirstOrDefault());
                    var NewItemDC = new ABRSoSanhTongHopVM() { Muc = "IX", NoiDung = "Tổng cộng %ABR Sau ĐC/ Doanh thu tổng", group1 = "Doanh thu tổng" };
                    var itemDC = DieuChinhThang.FirstOrDefault();
                    if (item != null)
                    {
                        NewItemDC.ThucTeThangNay = (itemDC.ThucTeThangNay == 0 ? 0 : (listABR.Sum(x => x.ThucTeThangNay) + itemDC.ThucTeThangNay) / item.ThucTeThangNay);
                        NewItemDC.ThucTeThangTruoc = (itemDC.ThucTeThangTruoc == 0 ? 0 : (listABR.Sum(x => x.ThucTeThangTruoc) + itemDC.ThucTeThangNay) / item.ThucTeThangTruoc);
                        NewItemDC.NganSachThangNay = 0;
                        NewItemDC.PhanTramChenhLechThang = NewItemDC.ThucTeThangNay - NewItemDC.ThucTeThangTruoc;
                        NewItemDC.PhanTramChenhLechThucTeNganSach = 0;
                    }
                    listTongHop.Add(NewItemDC);
                }
            }
            

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        dialogService.Close();
    }

    public async Task Reload()
    {
        await LoadDanhSachTongHop();
        DaXetDuyet1 = await aBRClient.CheckDaXetDuyet(Thang, Nam,1, MaBenhVien);
        DaXetDuyet2 = await aBRClient.CheckDaXetDuyet(Thang, Nam, 2, MaBenhVien);
        DaTinhABR = await aBRClient.CheckDaTinhABR(Thang, Nam);
        SoLanTuChoi1= await aBRClient.GetSoLanTuChoi(Thang, Nam, 1);
        await InvokeAsync(StateHasChanged);
    }

    public async Task XetDuyet(int Muc)
    {
        bool Result = true;
        Result = (bool)await dialogService.Confirm("Bạn đồng ý xét duyệt ABR tháng " +Thang+ " năm " + Nam + "?", "Xác nhận", new ConfirmOptions() { OkButtonText = "Đồng ý", CancelButtonText = "Không"});
        if (Result)
        {
            commonUI.BusyDialog(dialogService, "Loading...");
            try
            {
                var result = await aBRClient.SaveXetDuyet(Thang, Nam, Muc, listTongHop);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            dialogService.Close();
            await Reload();
        }
    }
    public async Task DeletePheDuyet(int Muc)
    {
        bool Result = true;
        Result = (bool)await dialogService.Confirm("Bạn chắc chắn từ chối phê duyệt tháng " + Thang + " năm " + Nam + "?", "Xác nhận", new ConfirmOptions() { OkButtonText = "Đồng ý", CancelButtonText = "Không" });
        if (Result)
        {
            commonUI.BusyDialog(dialogService, "Loading...");
            try
            {
                var kq= await aBRClient.DeleteXetDuyet(Thang, Nam, Muc, MaBenhVien);
                if (kq)
                {
                    toastService.ShowInfo("Từ chối phê duyệt thành công");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
            dialogService.Close();
            await Reload();
        }
    }
    public async Task NhapNganSach()
    {
        var parameters = new ModalParameters();
        parameters.Add("Thang", Thang);
        parameters.Add("Nam", Nam);
        parameters.Add("Thang", Thang);
        parameters.Add("MaBenhVien", MaBenhVien);
        var re = Modal.Show<ABRNganSachThangCom>("Nhập ngân sách", parameters);
        await re.Result;
        await LoadDanhSachTongHop();
    }

    void OnRenderTongHop(DataGridRenderEventArgs<ABRSoSanhTongHopVM> args)
    {
        if(args.FirstRender)
        {
            args.Grid.Groups.Add(new GroupDescriptor(){ Property = "Muc", Title = "Nhóm" });
            StateHasChanged();
        }
    }
    private async Task Export()
    {
        var pkg = await exportFile.SaveFile(listTongHop);
        var fileBytes = pkg.GetAsByteArray();
        pkg.Dispose();
        var fileName = $"BaoCao.xlsx";
        await jsRuntime.InvokeAsync<object>("saveAsFile", fileName, Convert.ToBase64String(fileBytes));
    }

}
  