using OfficeOpenXml;
using SalesAuto.Models;
using SalesAuto.Models.Entities;
using SalesAuto.Models.SearchModel;
using SalesAuto.Models.ViewModel;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace SalesAuto.Api.Repositories
{
    public interface IABRRepo
    {
        Task<bool> DeleteDanhMucABR(string MaBenhVien, int iD);
        Task<List<ABRCongViecHisVM>> LayCongViecHis(string MaBenhVien);
        Task<List<ABRDanhMuc>> LayDanhMucABR(string MaBenhVien);
        Task<List<ABRCongViecHisVM>> LayDanhMucCongViecHis(string MaBenhVien);
        Task<List<ABRNhom>> LayNhomABR();
        Task<bool> SaveDanhMucABR(string MaBenhVien, ABRDanhMuc aBRDanhMuc);
        Task<List<ABRMapCongViecABRHISVM>> LayDanhSachMapCongViecABRHIS(string maBenhVien);
        Task<ABRMapCongViecABRHIS> SaveMapCongViecABRHIS(string maBenhVien, ABRMapCongViecABRHIS item);
        Task<bool> DeleteMapCongViecABRHIS(string maBenhVien, int iD);
        Task<List<ABRNhanVien>> LayDanhSachABRNhanVien(string maBenhVien);
        Task<bool> SaveABRNhanVien(string maBenhVien, ABRNhanVien item);
        Task<bool> DeleteABRNhanVien(string maBenhVien, Guid iD);
        Task<List<ABRMapNhanVienABRHISVM>> LayDanhSachMapNhanVienABRHIS(string maBenhVien);
        Task<bool> SaveMapNhanVienABRHIS(string maBenhVien, ABRMapNhanVienABRHIS item);
        Task<bool> DeleteMapNhanVienABRHIS(string maBenhVien, Guid iD);
        Task<List<AbrNhanVienHisVM>> LayDanhSachNhanVienHIS(string maBenhVien);
        Task<List<ABRNhanVienThucHienVM>> getNhanVienThucHien(string maBenhVien, NhanVienThucHienSM nhanVienThucHienSM);
        Task<List<string>> GetNhomCongViecThongKe(string maBenhVien);
        Task<bool> SaveNhanVienThucHien(string maBenhVienNguon, ABRNhanVienThucHien aBRNhanVienThucHien);
        Task<bool> DeleteNhanVienThucHien(string maBenhVienNguon, ABRNhanVienThucHien aBRNhanVienThucHien);
        Task<IEnumerable<IDictionary<string, object>>> GetBaoCaoChiTietDaThucHien(string maBenhVienNguon, NhanVienThucHienSM nhanVienThucHienSM);
        Task<IEnumerable<IDictionary<string, object>>> GetBaoCaoDaThucHien(string maBenhVienNguon, NhanVienThucHienSM nhanVienThucHienSM);
        Task<bool> SaveDanhGiaNhanVien(string BenhVienNguon, ABRDanhGiaNhanVien aBRDanhGiaNhanVien);
        Task<bool> AddNhanVienHuongPool(string maBenhVien, Guid IDABRNhanVien, Guid IDABRPool);
        Task<bool> DeleteNhanVienHuongPool(string maBenhVien, Guid IDABRNhanVien, Guid IDABRPool);
        Task<List<AbrPool>> GetNhanVienHuongPool(string maBenhVien, Guid IDABRNhanVien);
        Task<List<AbrPool>> GetDanhSachPool(string MaBenhVien);
        Task<ExcelPackage> createABRExcel(int thang, int nam, string MaBenhVien);
        Task<List<AbrSoSanhChiTietVM>> GetABRSoSanhChiTiet(int Thang, int Nam, string MaBenhVienChiNhanh = "", string MaBenhVien = "");
        Task<List<ABRSoSanhTongHopVM>> GetABRSoSanhTongHop(int Thang, int Nam, string MaBenhVienChiNhanh = "", string MaBenhVien = "");
        Task<List<ABRSoSanhTongHopVM>> GetABRDoanhThuThangTongHop(int Thang, int Nam, string MaBenhVienChiNhanh = "", string MaBenhVien = "");
        Task<bool> SaveXetDuyet(string MaBenhVien, int Thang, int Nam, int Muc, List<ABRSoSanhTongHopVM> listTongHop);
        Task<bool> DeleteXetDuyet(string MaBenhVien, int Thang, int Nam, int Muc, string MaBenhVienChiNhanh = "");
        Task<bool> CheckDaTinhSoLuongABR(string MaBenhVien, int Thang, int Nam);
        Task<bool> CheckDaUploadBangDanhGia(string MaBenhVien, int Thang, int Nam);
        Task<bool> CheckDaTinhABR(string MaBenhVien, int Thang, int Nam);
        Task<bool> CheckDaXetDuyet(string MaBenhVien, int Thang, int Nam, int Muc, string MaBenhVienChiNhanh = "");
        Task<bool> CheckDaXetDuyetTheoNgay(string MaBenhVien, DateTime Ngay, string MaBenhVienChiNhanh = "");
        Task<List<ABRDanhGiaNhanVien>> GetBangDanhGiaNhanVien(string MaBenhVien, int thang, int nam);
        Task<bool> DeleteBangDanhGiaNhanVien(string MaBenhVien, int thang, int nam);
        Task<bool> TinhHuongABR(string MaBenhVien, int Thang, int Nam);
        Task<bool> SaveNganSachThang(string MaBenhVien, ABRNganSachThang item);
        Task<List<ABRNganSachThang>> GetNganSachThang(string MaBenhVien, int thang, int nam, string MaBenhVienChiNhanh="");
        Task<int> GetSoLanTuChoi(string MaBenhVien, int Thang, int Nam, int Muc);
        Task<List<ABRDieuChinh>> GetABRDieuChinh(int Thang, int Nam, string MaBenhVien);
        Task<bool> SaveABRDieuChinh(ABRDieuChinh item, string MaBenhVien);
        Task<List<ABRChiTietNhanVienVM>> GetABRChiTietNhanVien(string MaBenhVien, string MaNhanVien, int thang, int nam);
        Task<List<ABRThucHienCuoiVM>> GetThucHienCuoi(string MaBenhVien);
        Task<IEnumerable<IDictionary<string, object>>> GetLuongChiTietDichVu(string MaBenhVien, int thang, int nam, int page, int NumRecords);
        Task<IEnumerable<IDictionary<string, object>>> GetGetLuongNhomDichVu(string MaBenhVien, int thang, int nam);
        Task<bool> AddNhanVienABRLuonDuocHuong(string maBenhVien, Guid IDABRNhanVien, int IDABRDanhMuc);
        Task<bool> DeleteNhanVienABRLuonDuocHuong(string maBenhVien, Guid IDABRNhanVien, int IDABRDanhMuc);
        Task<List<ABRDanhMuc>> GetNhanVienABRLuonDuocHuong(string maBenhVien, Guid IDABRNhanVien);
        Task<ABRHuongBacThang> SaveHuongBacThang(string maBenhVien, ABRHuongBacThang aBRHuongBacThang);
        Task<bool> DeleteHuongBacThang(string maBenhVien, Guid ID);
        Task<List<ABRHuongBacThang>> GetDanhSachHuongBacThang(string maBenhVien, int IDABRDanhMuc);
        Task<List<ABRLoaiVaiTro>> GetDanhSachLoaiVaiTro(string MaBenhVien);
        Task<AbrPool> SavePool(string MaBenhVien, AbrPool abrPool);
        Task<bool> DeletePool(string MaBenhVien, Guid id);
        Task<ABRThangNam> getNgayTheoThang(string MaBenhVien, int Thang, int Nam);
        Task<ABRThangNam> SaveNgayTheoThang(string MaBenhVien, ABRThangNam item);
        Task<IEnumerable<IDictionary<string, object>>> GetNhanVienThucHienHis(string maBenhVien, NhanVienThucHienSM nhanVienThucHienSM);
        Task<List<AbrPool>> GetPoolHuongTheoDanhMuc(string maBenhVienNguon, int idDanhMuc);
        Task<bool> DeletePoolHuongTheoDanhMuc(string maBenhVienNguon, int idDanhMuc);
        Task<bool> SavePoolHuongTheoDanhMuc(string maBenhVienNguon, int idDanhMuc, Guid idPool);
        Task<List<ABRDanhMucNhanVienVM>> GetDanhSackDanhMucNhanVien(string MaBenhVien, Guid IDNhanVien);
        Task<ABRDanhMucNhanVienVM> SaveDanhMucNhanVien(string MaBenhVien, ABRDanhMucNhanVienVM aBRDanhMucNhanVienVM);
        Task<bool> DeleteDanhMucNhanVien(string MaBenhVien, ABRDanhMucNhanVienVM aBRDanhMucNhanVienVM);
        Task<List<ABRDanhMuc>> GetDanhMucABRMasterData();
        Task<bool> SaveDanhMucABRMasterData(ABRDanhMuc aBRDanhMuc);
        Task<bool> DeleteDanhMucABRMasterData(int iD);
        Task<List<ABRDanhMucXetDuyet>> ABRGetDanhMucXetDuyet(string MaBenhVien);
        Task<List<ABRDanhMucXetDuyet>> ABRGetDanhMucXetDuyetMaster();
        Task<ABRDanhMucXetDuyet> SaveTinhTrangXetDuyetMaster(ABRDanhMucXetDuyet aBRDanhMucXetDuyet);
        Task<List<ABRXacNhanNhanVienThucHienHisVM>> GetXacNhanNhanVienThucHienHis(string MaBenhVien, string UserName, DateTime TuNgay, DateTime DenNgay);
        Task<ABRXacNhanNhanVienThucHienHisVM> SaveXacNhanNhanVienThucHienHis(string MaBenhVien, ABRXacNhanNhanVienThucHienHisVM item);
        Task<bool> DeleteXacNhanNhanVienThucHienHis(string MaBenhVien, ABRXacNhanNhanVienThucHienHisVM item);
        Task<bool> DeleteUserKetThucCongViecHis(string MaBenhVien, Guid ID);        
        Task<List<ABRUserKetThucCongViecHisVM>> GetUserKetThucCongViecHis(string MaBenhVien);
        Task<List<UserVM>> LayUserKetThucHis(string MaBenhVien);
        Task<ABRUserKetThucCongViecHis> SaveUserKetThucCongViecHis(string MaBenhVien, ABRUserKetThucCongViecHis item);
        Task<List<ABRNgayCong>> GetNgayCong(string MaBenhVien, int Thang, int Nam);
        Task<ABRNgayCong> SaveNgayCong(string MaBenhVien, ABRNgayCong item);
        Task<bool> DeleteNgayCong(string MaBenhVien, ABRNgayCong item);
        Task<IEnumerable<IDictionary<string, object>>> GetBaoCaoXacNhanNhanVienHis(string MaBenhVien, TuNgayDenNgayOneParaSM sM);
        Task<IEnumerable<IDictionary<string, object>>> GetBaoCaoChiTietXacNhanNhanVienHis(string MaBenhVien, TuNgayDenNgayOneParaSM sM);
        Task<List<BenhVienVM>> GetBenhVien(string MaBenhVien);
        Task<ExcelPackage> GetLuongChiTietDichVu(string MaBenhVien, int thang, int nam);
        Task<List<ABRUserXacNhanNoiLamViec>> GetUserXacNhanNoiLamViecThucHien(string MaBenhVien);
        Task<ABRUserXacNhanNoiLamViec> SaveUserXacNhanNoiLamViecThucHien(string MaBenhVien, ABRUserXacNhanNoiLamViec aBRUserXacNhanNoiLamViec);
        Task<bool> DeleteUserXacNhanNoiLamViecThucHien(string MaBenhVien, ABRUserXacNhanNoiLamViec aBRUserXacNhanNoiLamViec);
        Task<List<ABRUserXacNhanNoiLamViec>> GetUserXacNhanNoiLamViecChiDinh(string MaBenhVien);
        Task<ABRUserXacNhanNoiLamViec> SaveUserXacNhanNoiLamViecChiDinh(string MaBenhVien, ABRUserXacNhanNoiLamViec aBRUserXacNhanNoiLamViec);
        Task<bool> DeleteUserXacNhanNoiLamViecChiDinh(string MaBenhVien, ABRUserXacNhanNoiLamViec aBRUserXacNhanNoiLamViec);
        Task<List<ABRNoiLamViecVM>> GetNoiLamViec(string MaBenhVien);
        Task<List<ABRSoSanhTongHopVM>> GetABRDieuChinhThangTongHop(int Thang, int Nam, string MaBenhVienChiNhanh = "", string MaBenhVien = "");
    }
}